{"version":3,"file":"static/webpack/static/development/pages/baccarat/m.js.564804548e286d1088ce.hot-update.js","sources":["webpack:///./components/baccarat/game-counter.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport colors from '../../libs/styleguide/colors';\nimport t from '../../libs/i18n-util';\n\nimport { selectors, actions } from '../../redux';\n\n@connect(({ baccarat, modal }) => ({ baccarat, modal }))\nclass GameCounter extends React.Component {\n\n  state = {\n    countdown: '--:--',\n  }\n\n  updateCountdown = () => {\n    let gameConfig = selectors.getBaccaratGameConfig(this.props);\n    let timeEnd = _.get(gameConfig, 'time_end');\n    if (timeEnd) {\n      timeEnd = moment(timeEnd).utcOffset(0, true); // set the endTime to UTC+0\n      const diff = timeEnd.diff(moment());\n      const countdown = moment.utc(Math.max(0, diff)).format('mm:ss');\n      this.setState({ countdown });\n    }\n  }\n\n  isPlaying() {\n    switch(this.state.countdown) {\n    case '00:06':\n    case '00:05':\n    case '00:04':\n    case '00:03':\n    case '00:02':\n    case '00:01':\n      return Sound.status.PLAYING;\n    default:\n      return Sound.status.STOPPED;\n    }\n  }\n\n  componentDidMount() {\n    this.updateCountdown();\n    setInterval(this.updateCountdown, 500);\n  }\n\n  render() {\n    const styles = {\n      root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 68,\n        textAlign: 'center',\n        borderStyle: 'solid',\n        borderColor: '#979797',\n        borderRadius: 2,\n        borderWidth: 1,\n      },\n      time: {\n        color: colors.orangeYellow,\n      }\n    };\n\n    const playStatus = this.isPlaying();\n    return (\n      <div style={styles.root}>\n        <Sound\n          url=\"/static/audio/5s.mp3\"\n          autoLoad={true}\n          playStatus={playStatus}\n        />\n        <div>{t('open_time')}</div>\n        <div style={styles.time}>{this.state.countdown}</div>\n      </div>\n    );\n  }\n}\n\nGameCounter.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default GameCounter;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AATA;AAWA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AADA;AAbA;AAkBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AAGA;;;;AAnEA;AAsEA;AACA;AADA;AAIA;;;;A","sourceRoot":""}