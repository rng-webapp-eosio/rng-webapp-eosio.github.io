{"version":3,"file":"static/webpack/static/development/pages/baccarat/m.js.723f3b33397ae037c8b8.hot-update.js","sources":["webpack:///./components/baccarat/game-result-modal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\n\nimport colors from '../../libs/styleguide/colors';\nimport { selectors, actions } from '../../redux';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = {\n  paper: {\n    height: 260,\n    borderRadius: 4,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: colors.orangeYellow,\n    background: colors.darkGrey4,\n    position: 'absolute',\n    width: '80%',\n    // backgroundColor: theme.palette.background.paper,\n    // boxShadow: theme.shadows[5],\n    // padding: theme.spacing.unit * 4,\n    // outline: 'none',\n  },\n  pokerImage: {\n    textAlign: 'center',\n    marginTop: 50,\n  },\n  description: {\n    display: 'flex',\n    justifyContent: 'center',\n    maxWidth: 375,\n    margin: '30px auto auto auto',\n  },\n  winner: {\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: colors.clearBlue\n  },\n  winnerWord: {\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: colors.palePeach\n  }\n};\n\nconst WINNER_MAPPING = {\n  player: '閒家',\n  banker: '莊家',\n  tie: '和',\n};\n\n@connect(({ myBalance, baccarat }) => ({ myBalance, baccarat }))\nclass GameResultModal extends React.Component {\n\n  handleClose = () => {\n    this.props.dispatch(actions.baccaratCloseGameResult());\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { showGameResult, gameResult } = selectors.getBaccaratGameStatus(this.props) || {};\n    const { winner, is_banker_pair, is_player_pair } = gameResult || { };\n\n    return (\n      <div>\n        <Modal\n          aria-labelledby=\"game result\"\n          aria-describedby=\"game result\"\n          open={showGameResult}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <div className={classes.pokerImage}>\n              <img src=\"/static/img/baccarat/popup_poker.svg\"/>\n            </div>\n            <div className={classes.description}>\n              <Typography variant=\"h6\" inline={true} className={classes.winner}>\n                {WINNER_MAPPING[winner]}\n              </Typography>\n              {!!is_banker_pair && <Typography variant=\"h6\" inline={true} className={classes.winner}>莊對</Typography>}\n              {!!is_player_pair && <Typography variant=\"h6\" inline={true} className={classes.winner}>賢</Typography>}\n              <Typography variant=\"h6\" inline={true} className={classes.winnerWord}>\n              獲勝\n              </Typography>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nGameResultModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n  dispatch: PropTypes.func,\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst GameResultModalWrapped = withStyles(styles)(GameResultModal);\n\nexport default GameResultModalWrapped;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAbA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AA9BA;AAqCA;AACA;AACA;AACA;AAHA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;;;;;;AACA;;;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;;;;AAzCA;AA4CA;AACA;AACA;AAFA;AACA;AAKA;AAEA;;;;A","sourceRoot":""}