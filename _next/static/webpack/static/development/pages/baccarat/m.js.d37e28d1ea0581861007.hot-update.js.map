{"version":3,"file":"static/webpack/static/development/pages/baccarat/m.js.d37e28d1ea0581861007.hot-update.js","sources":["webpack:///./redux/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport _ from 'lodash';\n\nimport * as pk10Redux from './pk10';\nimport * as diceRedux from './dice';\nimport * as baccaratRedux from './baccarat';\n\n// my balance\nconst ACTION_UPDATE_MY_BALANCE = 'ACTION_UPDATE_MY_BALANCE';\nconst ACTION_UPDATE_ACCOUNT = 'ACTION_UPDATE_ACCOUNT';\n\nconst ACTION_UPDATE_MESSAGE_MODAL = 'ACTION_UPDATE_MESSAGE_MODAL';\nconst ACTION_UPDATE_LOADING_MODAL = 'ACTION_UPDATE_LOADING_MODAL';\nconst ACTION_UPDATE_ERROR_MODAL = 'ACTION_UPDATE_ERROR_MODAL';\n\nconst INITIAL_STATE = {\n  myBalance: null,\n  account: null,\n  modal: {\n    error: {\n      open: false,\n      content: null,\n    },\n    message: {\n      open: false,\n      content: null,\n    },\n    loading: {\n      open: false,\n      content: null,\n    },\n  },\n  [baccaratRedux.NAME_SPACE]: baccaratRedux.INITIAL_STATE,\n  [pk10Redux.NAME_SPACE]: pk10Redux.INITIAL_STATE,\n  [diceRedux.NAME_SPACE]: diceRedux.INITIAL_STATE,\n};\n\nconst rootReducer = combineReducers({\n  myBalance: (state = INITIAL_STATE.myBalance, action) => {\n    switch (action.type) {\n    case ACTION_UPDATE_MY_BALANCE: {\n      const { myBalance } = action.payload;\n      return myBalance;\n    }\n    default:\n      return state;\n    }\n  },\n  account: (state = INITIAL_STATE.account, action) => {\n    const { type, payload } = action;\n    switch (type) {\n    case ACTION_UPDATE_ACCOUNT: {\n      const { account } = payload;\n      return account;\n    }\n    default:\n      return state;\n    }\n  },\n  modal: (state = INITIAL_STATE.modal, action) => {\n    const { type, payload } = action;\n    switch (type) {\n    case ACTION_UPDATE_ERROR_MODAL: {\n      const { open, content } = payload;\n      const { error, ...rest } = state;\n      return { ...rest, error: { open,content } };\n    }\n    case ACTION_UPDATE_MESSAGE_MODAL: {\n      const { open, content } = payload;\n      const { message, ...rest } = state;\n      return { ...rest, message: { open,content } };\n    }\n    case ACTION_UPDATE_LOADING_MODAL: {\n      const { open, content } = payload;\n      const { loading, ...rest } = state;\n      return { ...rest, loading: { open,content } };\n    }\n    default:\n      return state;\n    }\n\n  },\n  [baccaratRedux.NAME_SPACE]: baccaratRedux.reducer,\n  [pk10Redux.NAME_SPACE]: pk10Redux.reducer,\n  [diceRedux.NAME_SPACE]: diceRedux.reducer,\n});\n\nexport const store = createStore(rootReducer, INITIAL_STATE);\n\nexport function initializeStore(initialState = INITIAL_STATE) {\n  return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n}\n\nexport const actions = {\n  myBalanceUpdate: myBalance => ({\n    type: ACTION_UPDATE_MY_BALANCE,\n    payload: { myBalance },\n  }),\n  myBalanceUpdateFromRemote: () => {\n\n  },\n  updateAccount: account => ({\n    type: ACTION_UPDATE_ACCOUNT,\n    payload: { account },\n  }),\n  logOut: () => ({\n    type: ACTION_UPDATE_ACCOUNT,\n    payload: { account: null },\n  }),\n  modal: {\n    showError: content => ({\n      type: ACTION_UPDATE_ERROR_MODAL ,\n      payload: { open: true, content }\n    }),\n    showMessage: content => ({\n      type: ACTION_UPDATE_MESSAGE_MODAL ,\n      payload: { open: true, content }\n    }),\n    showLoading: content => ({\n      type: ACTION_UPDATE_LOADING_MODAL ,\n      payload: { open: true, content }\n    }),\n    closeError: () => ({\n      type: ACTION_UPDATE_ERROR_MODAL ,\n      payload: { open : false }\n    }),\n    closeMessage: () => ({\n      type: ACTION_UPDATE_MESSAGE_MODAL ,\n      payload: { open : false }\n    }),\n    closeLoading: () => ({\n      type: ACTION_UPDATE_LOADING_MODAL ,\n      payload: { open : false }\n    }),\n  },\n  ...baccaratRedux.actions,\n  ...pk10Redux.actions,\n  ...diceRedux.actions,\n};\n\nexport const selectors = {\n  getMyBalance: (store = {} ) => _.get(store, 'myBalance'),\n  account: ( store = {} ) => _.get(store, 'account'),\n  modal: ( store = {} ) => _.get(store, 'modal', {}),\n  modalError: ( store = {} ) => _.get(store, 'modal.error', {}),\n  modalMessage: ( store = {} ) => _.get(store, 'modal.message', {}),\n  modalLoading: ( store = {} ) => _.get(store, 'modal.loading', {}),\n  ...baccaratRedux.selectors,\n  ...pk10Redux.selectors,\n  ...diceRedux.selectors,\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAHA;AAsBA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAjBA;AAoBA;AA5CA;AAkDA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AArBA;AAhBA;AA+CA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;;;;A","sourceRoot":""}