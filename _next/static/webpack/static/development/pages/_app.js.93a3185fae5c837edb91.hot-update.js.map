{"version":3,"file":"static/webpack/static/development/pages/_app.js.93a3185fae5c837edb91.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["// https://github.com/zeit/next.js/blob/master/examples/with-redux/pages/_app.js\n// https://github.com/mui-org/material-ui/blob/master/examples/nextjs/pages/_app.js\n// https://github.com/zeit/next.js/tree/canary/examples/with-segment-analytics\n\nimport App, { Container } from 'next/app';\nimport Router from 'next/router';\n\nimport React from 'react';\nimport withReduxStore from '../libs/with-redux-store';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport JssProvider from 'react-jss/lib/JssProvider';\n\nimport colors from '../libs/styleguide/colors';\nimport getPageContext from '../libs/get-page-context';\nimport analytics from '../libs/analytics-helper';\n\n// Track client-side page views with Segment\nRouter.events.on('routeChangeComplete', url => {\n  analytics.trackPage(url);\n});\n\nclass MyApp extends App {\n  constructor() {\n    super();\n    this.pageContext = getPageContext();\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    // eslint-disable-next-line no-undef\n\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render () {\n    const { Component, pageProps, reduxStore } = this.props;\n    return (\n      <Container>\n\n        <JssProvider\n          registry={this.pageContext.sheetsRegistry}\n          generateClassName={this.pageContext.generateClassName}\n        >\n          <MuiThemeProvider\n            theme={this.pageContext.theme}\n            sheetsManager={this.pageContext.sheetsManager}\n          >\n            <Provider store={reduxStore}>\n              <Component {...pageProps} />\n            </Provider>\n          </MuiThemeProvider>\n        </JssProvider>\n        <style jsx global>{`\n          body {\n            width: auto;\n            background-color: ${colors.darkGrey2};\n            font-family: Roboto, Helvetica, Arial, sans-serif;\n            margin: 0px;\n            overflow-x: hidden;\n            overflow-y: scroll;\n            color: #ffffff;\n            scrollbar-color: transparent; /* For firefox*/\n            scrollbar-width: auto; /* For firefox*/\n          }\n          ::-webkit-scrollbar {\n            width: 15px;  /* Remove scrollbar space */\n            background: transparent;  /* Optional: just make scrollbar invisible */\n          }\n        `}</style>\n\n      </Container>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AAFA;AAKA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAXA;AAAA;AAAA;AAAA;AAmCA;;;;AAtDA;AACA;AAwDA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}